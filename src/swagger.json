{
  "openapi": "3.0.0",
  "info": {
    "description": "Welcome to the pear-backend API docs!",
    "version": "1.0.0",
    "title": "pear-backend"
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "Operations to authenticate users. These routes do not require authorization."
    },
    {
      "name": "Development",
      "description": "Operations to test Pear. These routes are only accessible on the development environment."
    },
    {
      "name": "General",
      "description": "Operations to interact with Pear. These routes do not require authorization."
    },
    {
      "name": "Groups",
      "description": "Operations on Pear groups. These routes require authorization via access token."
    },
    {
      "name": "Interests",
      "description": "Operations on Pear interests. These routes require authorization via access token."
    },
    {
      "name": "Majors",
      "description": "Operations on Pear majors. These routes require authorization via access token."
    },
    {
      "name": "Users",
      "description": "Operations on Pear users. These routes require authorization via access token."
    }
  ],
  "paths": {
    "/auth/login/": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Authenticates an ID token from Google and creates a user for that Google account if one does not already exist. Returns a session for the user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "idToken": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/UserSession"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/refresh/": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Authenticates the refresh token and returns a new user session.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/UserSession"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "data": {
                      "$ref": "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/group/all/": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Gets all groups",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Group"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "data": {
                      "$ref": "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dev/login/": {
      "get": {
        "tags": [
          "Development"
        ],
        "summary": "Creates a dummy user for testing purposes.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "googleID": {
                    "type": "string",
                    "example": "abc123"
                  },
                  "firstName": {
                    "type": "string",
                    "example": "Gonzalo"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Gonzalez"
                  },
                  "netID": {
                    "type": "string",
                    "example": "gg387"
                  }
                }
              }
            }
          },
          "description": "Any field that isn't included will take on its default value."
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/UserSession"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/general/hello/": {
      "get": {
        "tags": [
          "General"
        ],
        "summary": "Sanity check to see if the application is running.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "string",
                      "example": "Hello world!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/interest/all/": {
      "get": {
        "tags": [
          "Interests"
        ],
        "summary": "Gets all interests",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Interest"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "data": {
                      "$ref": "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/major/all/": {
      "get": {
        "tags": [
          "Majors"
        ],
        "summary": "Gets all majors",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CornellMajor"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "data": {
                      "$ref": "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/all/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Gets all users.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "data": {
                      "$ref": "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Gets another user's information, given their netID. If none provided, gets current user.",
        "parameters": [
          {
            "in": "query",
            "name": "netID",
            "schema": {
              "type": "string"
            },
            "description": "The user's netID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "data": {
                      "$ref": "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete the current user.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "data": {
                      "$ref": "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/search/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Gets the most similar users.",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "description": "The search query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "data": {
                      "$ref": "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/availabilities/": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Update the availabilities for the current user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "schedule": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Availability"
                    }
                  }
                }
              }
            }
          },
          "description": "Ensure that day and times are valid.",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "data": {
                      "$ref": "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/demographics/": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Update the demographics for the current user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pronouns": {
                    "type": "string"
                  },
                  "graduationYear": {
                    "type": "string"
                  },
                  "major": {
                    "type": "string"
                  },
                  "hometown": {
                    "type": "string"
                  },
                  "profilePictureURL": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "Any combination of these fields is allowed.",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "data": {
                      "$ref": "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/groups/": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Update the groups for the current user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "groups": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Group"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "data": {
                      "$ref": "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/interests/": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Update the interests for the current user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "interests": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Interest"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "data": {
                      "$ref": "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/goals/": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Update the goals for the current user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "goals": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Goal"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "data": {
                      "$ref": "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/talkingPoints/": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Update the talking points for the current user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "goals": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TalkingPoint"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "data": {
                      "$ref": "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/socialMedia/": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Update the social media for the current user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "facebook": {
                    "type": "string"
                  },
                  "instagram": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "data": {
                      "$ref": "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about pear-backend",
    "url": "https://github.com/cuappdev/pear-backend"
  },
  "servers": [
    {
      "url": "https://pear-backend.cornellappdev.com/api/v1"
    }
  ],
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    },
    "schemas": {
      "Availability": {
        "type": "object",
        "properties": {
          "day": {
            "type": "string",
            "example": "monday"
          },
          "times": {
            "type": "array",
            "items": {
              "type": "number",
              "example": 18.5
            }
          }
        }
      },
      "CornellMajor": {
        "type": "string",
        "nullable": true
      },
      "Error": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Something went wrong :("
            }
          }
        }
      },
      "Group": {
        "type": "string",
        "example": "Cornell AppDev"
      },
      "Interest": {
        "type": "string"
      },
      "Goal": {
        "type": "string",
        "example": "Finding my people"
      },
      "TalkingPoint": {
        "type": "string",
        "example": "Tech"
      },
      "SubUser": {
        "type": "object",
        "properties": {
          "googleID": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "netID": {
            "type": "string"
          },
          "pronouns": {
            "type": "string",
            "nullable": true
          },
          "graduationYear": {
            "type": "string",
            "nullable": true
          },
          "major": {
            "$ref": "#/components/schemas/CornellMajor"
          },
          "hometown": {
            "type": "string",
            "nullable": true
          },
          "facebook": {
            "type": "string",
            "nullable": true
          },
          "instagram": {
            "type": "string",
            "nullable": true
          },
          "profilePictureURL": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "googleID": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "netID": {
            "type": "string"
          },
          "pronouns": {
            "type": "string",
            "nullable": true
          },
          "graduationYear": {
            "type": "string",
            "nullable": true
          },
          "major": {
            "$ref": "#/components/schemas/CornellMajor"
          },
          "hometown": {
            "type": "string",
            "nullable": true
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Group"
            }
          },
          "interests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interest"
            }
          },
          "goals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Goal"
            }
          },
          "talkingPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TalkingPoint"
            }
          },
          "facebook": {
            "type": "string",
            "nullable": true
          },
          "instagram": {
            "type": "string",
            "nullable": true
          },
          "profilePictureURL": {
            "type": "string",
            "nullable": true
          },
          "availabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Availability"
            }
          }
        }
      },
      "UserSession": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "refreshToken": {
            "type": "string"
          },
          "sessionExpiration": {
            "type": "string"
          }
        }
      }
    }
  }
}
